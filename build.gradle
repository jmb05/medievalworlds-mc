//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyUnusedAssignment
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.1.4'
group = 'net.jmb19905.medievalworlds'
archivesBaseName = 'medievalworlds'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformers.from(file('src/main/resources/META-INF/accesstransformer.cfg'))

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            args '-mixin.config=medievalworlds.mixins.json'
            mods {
                medievalworlds {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            args '-mixin.config=medievalworlds.mixins.json'
            mods {
                medievalworlds {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            args '-mixin.config=medievalworlds.mixins.json'
            args '--mod', 'medievalworlds', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                medievalworlds {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = 'https://sizableshrimp.me/maven'
    }
    maven {
        name "curios"
        url "https://maven.theillusivec4.top/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "zerocore"
        url = 'http://maven.zerono.it/'
        allowInsecureProtocol = true
    }
    mavenCentral()
}

mixin {
    add sourceSets.main, "medievalworlds.mixins.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:$forge_version"
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:$curios_version")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:$curios_version")

    compileOnly fg.deobf("mezz.jei:jei-$minecraft_version:$jei_version:api")
    runtimeOnly fg.deobf("mezz.jei:jei-$minecraft_version:$jei_version")

    compileOnly fg.deobf("it.zerono.mods.zerocore:ZeroCore2:1.18.2-2.1.16")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "medievalworlds",
                "Specification-Vendor"    : "jmb19905",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "jmb19905",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
